name: "CI - Test Features"
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      features: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: actions/checkout@v5
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            alpine-node: 'src/alpine-node/**'
            alpine-temurin: 'src/alpine-temurin/**'
            alpine-chromium: 'src/alpine-chromium/**'

  test:
    needs: [detect-changes]
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        features: ${{ fromJSON(needs.detect-changes.outputs.features) }}
        baseImage:
          - alpine:3.21
          - alpine:latest
    steps:
      - uses: actions/checkout@v5

      - name: "Setup Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: "Install dependencies"
        run: npm ci

      - name: "Generate test for '${{ matrix.features }}' against '${{ matrix.baseImage }}'"
        run: npx devcontainer features test --skip-scenarios -f ${{ matrix.features }} -i ${{ matrix.baseImage }} .

  test-scenarios:
    needs: [detect-changes]
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        features: ${{ fromJSON(needs.detect-changes.outputs.features) }}
    steps:
      - uses: actions/checkout@v5

      - name: "Setup Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: "Install dependencies"
        run: npm ci

      - name: "Test ${{ matrix.features }}"
        run: npx devcontainer features test -f ${{ matrix.features }} --skip-autogenerated .
