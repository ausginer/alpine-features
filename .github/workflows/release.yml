name: "Release dev container features & Generate Documentation"
on:
  push:
    branches:
      - main

jobs:
  deploy:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v5

      - name: "Publish Features"
        uses: devcontainers/action@v1
        with:
          publish-features: "true"
          base-path-to-features: "./src"
          generate-docs: "true"
          
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        features:
          - alpine-node
          - alpine-temurin
          - alpine-chromium
        baseImage:
          - alpine:3.21
          - alpine:latest
    steps:
      - uses: actions/checkout@v5

      - name: "Setup Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: "Install dependencies"
        run: npm ci

      - name: "Generate test for '${{ matrix.features }}' against '${{ matrix.baseImage }}'"
        run: npx devcontainer features test --skip-scenarios -f ${{ matrix.features }} -i ${{ matrix.baseImage }} .

  test-scenarios:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        features:
          - alpine-node
          - alpine-temurin
          - alpine-chromium
    steps:
      - uses: actions/checkout@v5

      - name: "Setup Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: "Install dependencies"
        run: npm ci

      - name: "Test ${{ matrix.features }}"
        run: npx devcontainer features test -f ${{ matrix.features }} --skip-autogenerated .
